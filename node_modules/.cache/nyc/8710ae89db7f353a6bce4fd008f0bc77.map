{"version":3,"sources":["ireportModel.js"],"names":["Record","redflags","interventions","record","newRecord","id","records","length","title","createdOn","createdBy","type","status","comment","location","image","video","push","foundRecord","find","Number","foundIndex","findIndex","foundObject","recordComment","findOneRecord","recordLocation","splice"],"mappings":";;;;;;;;;;AACA;IACMA,M;AACJ,oBAAc;AAAA;;AACZ,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACD;;;;iCAEYC,M,EAAQ;AACnB,UAAMC,YAAY;AAChBC,YAAI,KAAKC,OAAL,CAAaC,MAAb,GAAsB,CADV;AAEhBC,eAAOL,OAAOK,KAFE;AAGhBC,mBAAWN,OAAOM,SAHF;AAIhBC,mBAAWP,OAAOO,SAJF;AAKhBC,cAAMR,OAAOQ,IALG;AAMhBC,gBAAQT,OAAOS,MANC;AAOhBC,iBAASV,OAAOU,OAPA;AAQhBC,kBAAUX,OAAOW,QARD;AAShBC,eAAOZ,OAAOY,KATE;AAUhBC,eAAOb,OAAOa;AAVE,OAAlB;AAYA,UAAIb,OAAOQ,IAAP,KAAgB,SAApB,EAA+B;AAC7B,aAAKV,QAAL,CAAcgB,IAAd,CAAmBb,SAAnB;AACA,eAAQA,SAAR;AACD,OAHD,MAIK,IAAGD,OAAOQ,IAAP,KAAgB,cAAnB,EAAmC;AACtC,aAAKT,aAAL,CAAmBe,IAAnB,CAAwBb,SAAxB;AACA,eAAQA,SAAR;AACD;AACF;;;sCAEiB;AAChB,aAAQ,KAAKH,QAAb;AACD;;;2CAEsB;AACrB,aAAQ,KAAKC,aAAb;AACD;;;kCAEaG,E,EAAI;AAChB,UAAMa,cAAc,KAAKZ,OAAL,CAAaa,IAAb,CAAkB;AAAA,eAAUhB,OAAOE,EAAP,KAAce,OAAOf,EAAP,CAAxB;AAAA,OAAlB,CAApB;AACA,UAAMgB,aAAa,KAAKf,OAAL,CAAagB,SAAb,CAAuB;AAAA,eAAUnB,OAAOE,EAAP,KAAce,OAAOf,EAAP,CAAxB;AAAA,OAAvB,CAAnB;AACA,UAAMkB,cAAc;AAClBL,qBAAaA,WADK;AAElBG,oBAAYA;AAFM,OAApB;AAIA,aAAQE,WAAR;AACD;;AAED;;;;kCACclB,E,EAAImB,a,EAAe;AAAA,2BACK,KAAKC,aAAL,CAAmBpB,EAAnB,CADL;AAAA,UACvBa,WADuB,kBACvBA,WADuB;AAAA,UACVG,UADU,kBACVA,UADU;;AAE/B,WAAKf,OAAL,CAAae,UAAb,EAAyBR,OAAzB,GAAmCW,aAAnC;AACA,aAAO,EAAEN,wBAAF,EAAP;AACD;;;mCAEcb,E,EAAIqB,c,EAAgB;AAAA,4BACG,KAAKD,aAAL,CAAmBpB,EAAnB,CADH;AAAA,UACzBa,WADyB,mBACzBA,WADyB;AAAA,UACZG,UADY,mBACZA,UADY;;AAEjC,WAAKf,OAAL,CAAae,UAAb,EAAyBP,QAAzB,GAAoCY,cAApC;AACA,aAAO,EAAER,wBAAF,EAAP;AACD;;;iCAEYb,E,EAAI;AAAA,4BACqB,KAAKoB,aAAL,CAAmBpB,EAAnB,CADrB;AAAA,UACPa,WADO,mBACPA,WADO;AAAA,UACMG,UADN,mBACMA,UADN;;AAEf,WAAKf,OAAL,CAAaqB,MAAb,CAAoBN,UAApB,EAAgC,CAAhC;AACA,aAAO,EAAEH,wBAAF,EAAP;AACD;;;;;;kBAEYlB,M","file":"ireportModel.js","sourceRoot":"C:/Users/CyberCloned/Documents/Zokky/Andela/iReporterApp/src/models","sourcesContent":["\n/* Idea of implementation got from https://www.codementor.io/olawalealadeusi896/building-simple-api-with-es6-krn8xx3k6 */\nclass Record {\n  constructor() {\n    this.redflags = [];\n    this.interventions = [];\n  }\n\n  createRecord(record) {\n    const newRecord = {\n      id: this.records.length + 1,\n      title: record.title,\n      createdOn: record.createdOn,\n      createdBy: record.createdBy,\n      type: record.type,\n      status: record.status,\n      comment: record.comment,\n      location: record.location,\n      image: record.image,\n      video: record.video,\n    };\n    if (record.type === 'redflag') {\n      this.redflags.push(newRecord);\n      return (newRecord);\n    }\n    else if(record.type === 'intervention') {\n      this.interventions.push(newRecord);\n      return (newRecord);\n    }\n  }\n\n  findAllRedflags() {\n    return (this.redflags);\n  }\n\n  findAllInterventions() {\n    return (this.interventions);\n  }\n\n  findOneRecord(id) {\n    const foundRecord = this.records.find(record => record.id === Number(id));\n    const foundIndex = this.records.findIndex(record => record.id === Number(id));\n    const foundObject = {\n      foundRecord: foundRecord,\n      foundIndex: foundIndex,\n    }\n    return (foundObject);\n  }\n\n  // record from the controller will be req.body\n  updateComment(id, recordComment) {\n    const { foundRecord, foundIndex } = this.findOneRecord(id);\n    this.records[foundIndex].comment = recordComment;\n    return { foundRecord };\n  }\n\n  updateLocation(id, recordLocation) {\n    const { foundRecord, foundIndex } = this.findOneRecord(id);\n    this.records[foundIndex].location = recordLocation;\n    return { foundRecord };\n  }\n\n  deleteRecord(id) {\n    const { foundRecord, foundIndex } = this.findOneRecord(id);\n    this.records.splice(foundIndex, 1);\n    return { foundRecord };\n  }\n}\nexport default Record;\n"]}