{"version":3,"sources":["ireportControl.js"],"names":["recordObject","Record","recordControllers","createNewRecord","req","res","body","title","createdOn","location","comment","image","video","status","send","error","data","createRecord","viewAllRedflags","findAllRecords","viewAllInterventions","viewOneRedflag","findOneRecord","params","id","foundRecord","viewOneIntervention","editRecordComment","updateComment","Number","message","editRecordLocation","updateLocation","deleteIntervention","deleteRecord"],"mappings":";;;;;;AAAA;;;;;;AACA,IAAMA,eAAe,IAAIC,sBAAJ,EAArB;;AAEA,IAAMC,oBAAoB;AACxBC,iBADwB,2BACRC,GADQ,EACHC,GADG,EACE;AAAA,oBACsCD,IAAIE,IAD1C;AAAA,QAChBC,KADgB,aAChBA,KADgB;AAAA,QACTC,SADS,aACTA,SADS;AAAA,QACEC,QADF,aACEA,QADF;AAAA,QACYC,OADZ,aACYA,OADZ;AAAA,QACqBC,KADrB,aACqBA,KADrB;AAAA,QAC4BC,KAD5B,aAC4BA,KAD5B;;AAExB,QAAI,CAACL,KAAD,IAAU,CAACC,SAAX,IAAwB,CAACC,QAAzB,IAAqC,CAACC,OAAtC,IAAiD,CAACC,KAAlD,IAA2D,CAACC,KAAhE,EAAuE;AACrE,aAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,iBAAT,EAArB,CAAP;AACD;AACD,WAAOV,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAAChB,aAAaiB,YAAb,CAA0Bb,IAAIE,IAA9B,CAAD,CAAR,EAArB,CAAP;AACD,GAPuB;AASxBY,iBATwB,2BASRd,GATQ,EASHC,GATG,EASE;AACxBA,QAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAAChB,aAAamB,cAAb,CAA4B,SAA5B,CAAD,CAAR,EAArB;AACD,GAXuB;AAaxBC,sBAbwB,gCAaHhB,GAbG,EAaEC,GAbF,EAaO;AAC7BA,QAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAAChB,aAAamB,cAAb,CAA4B,cAA5B,CAAD,CAAR,EAArB;AACD,GAfuB;AAiBxBE,gBAjBwB,0BAiBTjB,GAjBS,EAiBJC,GAjBI,EAiBC;AAAA,gCACCL,aAAasB,aAAb,CAA2BlB,IAAImB,MAAJ,CAAWC,EAAtC,CADD;AAAA,QACfC,WADe,yBACfA,WADe;;AAEvB,QAAI,CAACA,WAAL,EAAkB;AAChBpB,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,kBAAT,EAArB;AACD,KAFD,MAEO;AACLV,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAACS,WAAD,CAAR,EAArB;AACD;AACF,GAxBuB;AA0BxBC,qBA1BwB,+BA0BJtB,GA1BI,EA0BCC,GA1BD,EA0BM;AAAA,iCACJL,aAAasB,aAAb,CAA2BlB,IAAImB,MAAJ,CAAWC,EAAtC,CADI;AAAA,QACpBC,WADoB,0BACpBA,WADoB;;AAE5B,QAAI,CAACA,WAAL,EAAkB;AAChBpB,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,kBAAT,EAArB;AACD,KAFD,MAEO;AACLV,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAACS,WAAD,CAAR,EAArB;AACD;AACF,GAjCuB;AAmCxBE,mBAnCwB,6BAmCNvB,GAnCM,EAmCDC,GAnCC,EAmCI;AAAA,iCACFL,aAAasB,aAAb,CAA2BlB,IAAImB,MAAJ,CAAWC,EAAtC,CADE;AAAA,QAClBC,WADkB,0BAClBA,WADkB;;AAE1B,QAAIrB,IAAIE,IAAJ,CAASI,OAAb,EAAsB;AACpBV,mBAAa4B,aAAb,CAA2BxB,IAAImB,MAAJ,CAAWC,EAAtC,EAA0CpB,IAAIE,IAAJ,CAASI,OAAnD;AACA,aAAOL,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAAC,EAAEQ,IAAIK,OAAOzB,IAAImB,MAAJ,CAAWC,EAAlB,CAAN,EAA6BM,SAAS,2BAAtC,EAAD,CAAR,EAArB,CAAP;AACD;AACD,WAAOzB,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,kBAAT,EAArB,CAAP;AACD,GA1CuB;AA4CxBgB,oBA5CwB,8BA4CL3B,GA5CK,EA4CAC,GA5CA,EA4CK;AAAA,iCACHL,aAAasB,aAAb,CAA2BlB,IAAImB,MAAJ,CAAWC,EAAtC,CADG;AAAA,QACnBC,WADmB,0BACnBA,WADmB;;AAE3B,QAAIrB,IAAIE,IAAJ,CAASG,QAAb,EAAuB;AACrBT,mBAAagC,cAAb,CAA4B5B,IAAImB,MAAJ,CAAWC,EAAvC,EAA2CpB,IAAIE,IAAJ,CAASG,QAApD;AACA,aAAOJ,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAAC,EAAEQ,IAAIK,OAAOzB,IAAImB,MAAJ,CAAWC,EAAlB,CAAN,EAA6BM,SAAS,2BAAtC,EAAD,CAAR,EAArB,CAAP;AACD;AACD,WAAOzB,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,kBAAT,EAArB,CAAP;AACD,GAnDuB;AAqDxBkB,oBArDwB,8BAqDL7B,GArDK,EAqDAC,GArDA,EAqDK;AAAA,iCACHL,aAAasB,aAAb,CAA2BlB,IAAImB,MAAJ,CAAWC,EAAtC,CADG;AAAA,QACnBC,WADmB,0BACnBA,WADmB;;AAE3B,QAAI,CAACA,WAAL,EAAkB;AAChBpB,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,kBAAT,EAArB;AACD,KAFD,MAEO;AACLf,mBAAakC,YAAb,CAA0B9B,IAAImB,MAAJ,CAAWC,EAArC;AACAnB,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAAC,EAAEQ,IAAIK,OAAOzB,IAAImB,MAAJ,CAAWC,EAAlB,CAAN,EAA6BM,SAAS,sCAAtC,EAAD,CAAR,EAArB;AACD;AACF;AA7DuB,CAA1B;;kBAgEe5B,iB","file":"ireportControl.js","sourceRoot":"C:/Users/CyberCloned/Documents/Zokky/Andela/iReporterApp/src/controllers","sourcesContent":["import Record from '../models/ireportModel';\r\nconst recordObject = new Record();\r\n\r\nconst recordControllers = {\r\n  createNewRecord(req, res) {\r\n    const { title, createdOn, location, comment, image, video } = req.body;\r\n    if (!title || !createdOn || !location || !comment || !image || !video) {\r\n      return res.status(400).send({ error: 'Incomplete data' });\r\n    }\r\n    return res.status(201).send({ data: [recordObject.createRecord(req.body)] });\r\n  },\r\n\r\n  viewAllRedflags(req, res) {\r\n    res.status(200).send({ data: [recordObject.findAllRecords('redflag')] });\r\n  },\r\n\r\n  viewAllInterventions(req, res) {\r\n    res.status(200).send({ data: [recordObject.findAllRecords('intervention')] });\r\n  },\r\n\r\n  viewOneRedflag(req, res) {\r\n    const { foundRecord } = recordObject.findOneRecord(req.params.id);\r\n    if (!foundRecord) {\r\n      res.status(404).send({ error: 'Record not found' });\r\n    } else {\r\n      res.status(200).send({ data: [foundRecord] });\r\n    }\r\n  },\r\n\r\n  viewOneIntervention(req, res) {\r\n    const { foundRecord } = recordObject.findOneRecord(req.params.id);\r\n    if (!foundRecord) {\r\n      res.status(404).send({ error: 'Record not found' });\r\n    } else {\r\n      res.status(200).send({ data: [foundRecord] });\r\n    }\r\n  },\r\n\r\n  editRecordComment(req, res) {\r\n    const { foundRecord } = recordObject.findOneRecord(req.params.id);\r\n    if (req.body.comment) {\r\n      recordObject.updateComment(req.params.id, req.body.comment)\r\n      return res.status(200).send({ data: [{ id: Number(req.params.id), message: 'Updated record\\'s comment' }] });\r\n    }\r\n    return res.status(404).send({ error: 'Record not found' });\r\n  },\r\n\r\n  editRecordLocation(req, res) {\r\n    const { foundRecord } = recordObject.findOneRecord(req.params.id);\r\n    if (req.body.location) {\r\n      recordObject.updateLocation(req.params.id, req.body.location)\r\n      return res.status(200).send({ data: [{ id: Number(req.params.id), message: 'Updated record\\'s comment' }] });\r\n    }\r\n    return res.status(404).send({ error: 'Record not found' });\r\n  },\r\n\r\n  deleteIntervention(req, res) {\r\n    const { foundRecord } = recordObject.findOneRecord(req.params.id);\r\n    if (!foundRecord) {\r\n      res.status(404).send({ error: 'Record not found' });\r\n    } else {\r\n      recordObject.deleteRecord(req.params.id)\r\n      res.status(200).send({ data: [{ id: Number(req.params.id), message: 'intervention record has been deleted' }] })\r\n    }\r\n  }\r\n};\r\n\r\nexport default recordControllers;\r\n"]}