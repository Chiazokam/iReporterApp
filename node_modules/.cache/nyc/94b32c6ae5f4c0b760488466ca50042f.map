{"version":3,"sources":["ireportControl.js"],"names":["recordObject","Record","recordControllers","createRedflag","req","res","status","send","data","createRecord","body","viewAllRedflags","findAllRecords","viewAllInterventions","viewOneRedflag","findOneRecord","params","id","foundRecord","error","viewOneIntervention","editRecordComment","comment","updateComment","Number","message","editRecordLocation","location","updateLocation","deleteIntervention","deleteRecord"],"mappings":"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","file":"ireportControl.js","sourceRoot":"C:/Users/CyberCloned/Documents/Zokky/Andela/iReporterApp/src/controllers","sourcesContent":["import Record from '../models/ireportModel';\nconst recordObject = new Record();\n\nconst recordControllers = {\n  createRedflag(req, res) {\n    return res.status(201).send({ data: [recordObject.createRecord(req.body)] });\n  },\n\n  viewAllRedflags(req, res) {\n    res.status(200).send({ data: [recordObject.findAllRecords('redflag')] });\n  },\n\n  viewAllInterventions(req, res) {\n    res.status(200).send({ data: [recordObject.findAllRecords('intervention')] });\n  },\n\n  viewOneRedflag(req, res) {\n    const { foundRecord } = recordObject.findOneRecord(req.params.id);\n    if (!foundRecord) {\n      res.status(404).send({ error: 'Record not found' });\n    } else {\n      res.status(200).send({ data: [foundRecord] });\n    }\n  },\n\n  viewOneIntervention(req, res) {\n    const { foundRecord } = recordObject.findOneRecord(req.params.id);\n    if (!foundRecord) {\n      res.status(404).send({ error: 'Record not found' });\n    } else {\n      res.status(200).send({ data: [foundRecord] });\n    }\n  },\n\n  editRecordComment(req, res) {\n    const { foundRecord } = recordObject.findOneRecord(req.params.id);\n    if (req.body.comment) {\n      recordObject.updateComment(req.params.id, req.body.comment)\n      return res.status(200).send({ data: [{ id: Number(req.params.id), message: 'Updated record\\'s comment' }] });\n    }\n    return res.status(404).send({ error: 'Record not found' });\n  },\n\n  editRecordLocation(req, res) {\n    const { foundRecord } = recordObject.findOneRecord(req.params.id);\n    if (req.body.location) {\n      recordObject.updateLocation(req.params.id, req.body.location)\n      return res.status(200).send({ data: [{ id: Number(req.params.id), message: 'Updated record\\'s comment' }] });\n    }\n    return res.status(404).send({ error: 'Record not found' });\n  },\n\n  deleteIntervention(req, res) {\n    const { foundRecord } = recordObject.findOneRecord(req.params.id);\n    if (!foundRecord) {\n      res.status(404).send({ error: 'Record not found' });\n    } else {\n      recordObject.deleteRecord(req.params.id)\n      res.status(200).send({ data: [{ id: Number(req.params.id), message: 'intervention record has been deleted' }] })\n    }\n  }\n};\n\nexport default recordControllers;\n"]}