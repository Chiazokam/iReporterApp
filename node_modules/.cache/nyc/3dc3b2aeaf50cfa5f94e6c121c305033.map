{"version":3,"sources":["ireportControl.js"],"names":["recordObject","Record","recordControllers","createNewRecord","req","res","body","title","createdOn","location","comment","image","video","status","send","error","data","createRecord","viewAllRedflags","findAllRecords","viewAllInterventions","viewOneRedflag","findOneRecord","params","id","foundRecord","foundIndex","viewOneIntervention","editRedflagComment","updateComment","Number","message"],"mappings":"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","file":"ireportControl.js","sourceRoot":"C:/Users/CyberCloned/Documents/Zokky/Andela/iReporterApp/src/controllers","sourcesContent":["import Record from '../models/ireportModel';\nconst recordObject = new Record();\n\nconst recordControllers = {\n  createNewRecord(req, res) {\n    const { title, createdOn, location, comment, image, video } = req.body;\n    if (!title || !createdOn || !location || !comment || !image || !video) {\n      return res.status(400).send({ error: 'Incomplete data' });\n    }\n    return res.status(201).send({ data: [recordObject.createRecord(req.body)] });\n  },\n\n  viewAllRedflags(req, res) {\n    res.status(200).send({ data: [recordObject.findAllRecords('redflag')] });\n  },\n\n  viewAllInterventions(req, res) {\n    res.status(200).send({ data: [recordObject.findAllRecords('intervention')] });\n  },\n\n  viewOneRedflag(req, res) {\n    const { foundRecord, foundIndex } = recordObject.findOneRecord(req.params.id);\n    if (!foundRecord) {\n      res.status(404).send({ error: 'Record not found' });\n    } else {\n      res.status(200).send({ data: [foundRecord] });\n    }\n  },\n\n  viewOneIntervention(req, res) {\n    const { foundRecord, foundIndex } = recordObject.findOneRecord(req.params.id);\n    if (!foundRecord) {\n      res.status(404).send({ error: 'Record not found' });\n    } else {\n      res.status(200).send({ data: [foundRecord] });\n    }\n  },\n\n  editRedflagComment(req, res) {\n    if (!recordObject.findOneRecord(req.params.id)) {\n      res.status(404).send({ error: 'Record not found' });\n    } else {\n      recordObject.updateComment(req.params.id, req.body)\n      res.status(200).send({ data: { id: Number(req.params.id), message: 'Updated red-flag record\\'s comment' } });\n    }\n  },\n\n};\n\nexport default recordControllers;\n"]}