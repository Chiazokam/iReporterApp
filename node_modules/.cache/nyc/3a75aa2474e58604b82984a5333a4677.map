{"version":3,"sources":["ireportModel.js"],"names":["Record","redflags","interventions","record","newRecord","title","createdOn","createdBy","type","status","comment","location","image","video","length","push","id","foundRecord","find","Number","foundIndex","findIndex","foundObject","redflagComment","findOneRedflag","redflagLocation","intervComment","findOneIntervention","intervLocation","splice"],"mappings":"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","file":"ireportModel.js","sourceRoot":"C:/Users/CyberCloned/Documents/Zokky/Andela/iReporterApp/src/models","sourcesContent":["\n/* Idea of implementation got from https://www.codementor.io/olawalealadeusi896/building-simple-api-with-es6-krn8xx3k6 */\nclass Record {\n  constructor() {\n    this.redflags = [];\n    this.interventions = [];\n  }\n\n  createRecord(record) {\n    const newRecord = {\n      title: record.title,\n      createdOn: record.createdOn,\n      createdBy: record.createdBy,\n      type: record.type,\n      status: record.status,\n      comment: record.comment,\n      location: record.location,\n      image: record.image,\n      video: record.video,\n    };\n    if (record.type === 'redflag') {\n      newRecord['id'] = this.redflags.length + 1\n      this.redflags.push(newRecord);\n      return (newRecord);\n    }\n    if (record.type === 'intervention') {\n      newRecord['id'] = this.interventions.length + 1\n      this.interventions.push(newRecord);\n      return (newRecord);\n    }\n  }\n\nfindAllRedflags() {\n    return (this.redflags);\n  }\n\n  findAllInterventions() {\n    return (this.interventions);\n  }\n\n  findOneRedflag(id) {\n    const foundRecord = this.redflags.find(record => record.id === Number(id));\n    const foundIndex = this.redflags.findIndex(record => record.id === Number(id));\n    const foundObject = {\n      foundRecord,\n      foundIndex,\n    };\n    return (foundObject);\n  }\n\n  findOneIntervention(id) {\n    const foundRecord = this.interventions.find(record => record.id === Number(id));\n    const foundIndex = this.interventions.findIndex(record => record.id === Number(id));\n    const foundObject = {\n      foundRecord,\n      foundIndex,\n    };\n    return (foundObject);\n  }\n\n  // record from the controller will be req.body\n  updateRedflagComment(id, redflagComment) {\n    const { foundRecord, foundIndex } = this.findOneRedflag(id);\n    this.redflags[foundIndex].comment = redflagComment;\n    return { foundRecord };\n  }\n\n  updateRedflagLocation(id, redflagLocation) {\n    const { foundRecord, foundIndex } = this.findOneRedflag(id);\n    this.redflags[foundIndex].location = redflagLocation;\n    return { foundRecord };\n  }\n\n  updateIntervComment(id, intervComment) {\n    const { foundRecord, foundIndex } = this.findOneIntervention(id);\n    this.interventions[foundIndex].comment = intervComment;\n    return { foundRecord };\n  }\n\n  updateIntervLocation(id, intervLocation) {\n    const { foundRecord, foundIndex } = this.findOneIntervention(id);\n    this.interventions[foundIndex].location = intervLocation;\n    return { foundRecord };\n  }\n\n  deleteRedflag(id) {\n    const { foundRecord, foundIndex } = this.findOneRedflag(id);\n    this.redflags.splice(foundIndex, 1);\n    return { foundRecord };\n  }\n\n  deleteIntervention(id) {\n    const { foundRecord, foundIndex } = this.findOneIntervention(id);\n    this.interventions.splice(foundIndex, 1);\n    return { foundRecord };\n  }\n}\nexport default Record;\n"]}