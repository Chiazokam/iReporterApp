{"version":3,"sources":["ireportControl.js"],"names":["recordObject","Record","recordControllers","createNewRecord","req","res","body","title","createdOn","location","comment","image","video","status","send","error","data","createRecord","viewAllRedflags","findAllRecords","viewAllInterventions","viewOneRedflag","findOneRecord","params","id","foundRecord","viewOneIntervention","editRecordComment","console","log","updateComment","Number","message","editRecordLocation","updateLocation","deleteIntervention","deleteRecord"],"mappings":";;;;;;AAAA;;;;;;AACA,IAAMA,eAAe,IAAIC,sBAAJ,EAArB;;AAEA,IAAMC,oBAAoB;AACxBC,iBADwB,2BACRC,GADQ,EACHC,GADG,EACE;AAAA,oBACsCD,IAAIE,IAD1C;AAAA,QAChBC,KADgB,aAChBA,KADgB;AAAA,QACTC,SADS,aACTA,SADS;AAAA,QACEC,QADF,aACEA,QADF;AAAA,QACYC,OADZ,aACYA,OADZ;AAAA,QACqBC,KADrB,aACqBA,KADrB;AAAA,QAC4BC,KAD5B,aAC4BA,KAD5B;;AAExB,QAAI,CAACL,KAAD,IAAU,CAACC,SAAX,IAAwB,CAACC,QAAzB,IAAqC,CAACC,OAAtC,IAAiD,CAACC,KAAlD,IAA2D,CAACC,KAAhE,EAAuE;AACrE,aAAOP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,iBAAT,EAArB,CAAP;AACD;AACD,WAAOV,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAAChB,aAAaiB,YAAb,CAA0Bb,IAAIE,IAA9B,CAAD,CAAR,EAArB,CAAP;AACD,GAPuB;AASxBY,iBATwB,2BASRd,GATQ,EASHC,GATG,EASE;AACxBA,QAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAAChB,aAAamB,cAAb,CAA4B,SAA5B,CAAD,CAAR,EAArB;AACD,GAXuB;AAaxBC,sBAbwB,gCAaHhB,GAbG,EAaEC,GAbF,EAaO;AAC7BA,QAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAAChB,aAAamB,cAAb,CAA4B,cAA5B,CAAD,CAAR,EAArB;AACD,GAfuB;AAiBxBE,gBAjBwB,0BAiBTjB,GAjBS,EAiBJC,GAjBI,EAiBC;AAAA,gCACCL,aAAasB,aAAb,CAA2BlB,IAAImB,MAAJ,CAAWC,EAAtC,CADD;AAAA,QACfC,WADe,yBACfA,WADe;;AAEvB,QAAI,CAACA,WAAL,EAAkB;AAChBpB,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,kBAAT,EAArB;AACD,KAFD,MAEO;AACLV,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAACS,WAAD,CAAR,EAArB;AACD;AACF,GAxBuB;AA0BxBC,qBA1BwB,+BA0BJtB,GA1BI,EA0BCC,GA1BD,EA0BM;AAAA,iCACJL,aAAasB,aAAb,CAA2BlB,IAAImB,MAAJ,CAAWC,EAAtC,CADI;AAAA,QACpBC,WADoB,0BACpBA,WADoB;;AAE5B,QAAI,CAACA,WAAL,EAAkB;AAChBpB,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,kBAAT,EAArB;AACD,KAFD,MAEO;AACLV,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAACS,WAAD,CAAR,EAArB;AACD;AACF,GAjCuB;AAmCxBE,mBAnCwB,6BAmCNvB,GAnCM,EAmCDC,GAnCC,EAmCI;AAAA,iCACFL,aAAasB,aAAb,CAA2BlB,IAAImB,MAAJ,CAAWC,EAAtC,CADE;AAAA,QAClBC,WADkB,0BAClBA,WADkB;;AAE1B,QAAKA,WAAL,EAAoB;AAClBG,cAAQC,GAAR,CAAYzB,IAAIE,IAAJ,CAASI,OAArB;AACAV,mBAAa8B,aAAb,CAA2B1B,IAAImB,MAAJ,CAAWC,EAAtC,EAA0CpB,IAAIE,IAAJ,CAASI,OAAnD;AACA,aAAOL,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAAC,EAAEQ,IAAIO,OAAO3B,IAAImB,MAAJ,CAAWC,EAAlB,CAAN,EAA6BQ,SAAS,2BAAtC,EAAD,CAAR,EAArB,CAAP;AACD;AACD,WAAO3B,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,kBAAT,EAArB,CAAP;AACD,GA3CuB;AA6CxBkB,oBA7CwB,8BA6CL7B,GA7CK,EA6CAC,GA7CA,EA6CK;AAAA,iCACHL,aAAasB,aAAb,CAA2BlB,IAAImB,MAAJ,CAAWC,EAAtC,CADG;AAAA,QACnBC,WADmB,0BACnBA,WADmB;;AAE3B,QAAIA,WAAJ,EAAkB;AAChBzB,mBAAakC,cAAb,CAA4B9B,IAAImB,MAAJ,CAAWC,EAAvC,EAA2CpB,IAAIE,IAAJ,CAASG,QAApD;AACA,aAAOJ,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAAC,EAAEQ,IAAIO,OAAO3B,IAAImB,MAAJ,CAAWC,EAAlB,CAAN,EAA6BQ,SAAS,2BAAtC,EAAD,CAAR,EAArB,CAAP;AACD;AACD,WAAO3B,IAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,kBAAT,EAArB,CAAP;AACD,GApDuB;AAsDxBoB,oBAtDwB,8BAsDL/B,GAtDK,EAsDAC,GAtDA,EAsDK;AAAA,iCACHL,aAAasB,aAAb,CAA2BlB,IAAImB,MAAJ,CAAWC,EAAtC,CADG;AAAA,QACnBC,WADmB,0BACnBA,WADmB;;AAE3B,QAAI,CAACA,WAAL,EAAkB;AAChBpB,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,kBAAT,EAArB;AACD,KAFD,MAEO;AACLf,mBAAaoC,YAAb,CAA0BhC,IAAImB,MAAJ,CAAWC,EAArC;AACAnB,UAAIQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEE,MAAM,CAAC,EAAEQ,IAAIO,OAAO3B,IAAImB,MAAJ,CAAWC,EAAlB,CAAN,EAA6BQ,SAAS,sCAAtC,EAAD,CAAR,EAArB;AACD;AACF;AA9DuB,CAA1B;;kBAiEe9B,iB","file":"ireportControl.js","sourceRoot":"C:/Users/CyberCloned/Documents/Zokky/Andela/iReporterApp/src/controllers","sourcesContent":["import Record from '../models/ireportModel';\nconst recordObject = new Record();\n\nconst recordControllers = {\n  createNewRecord(req, res) {\n    const { title, createdOn, location, comment, image, video } = req.body;\n    if (!title || !createdOn || !location || !comment || !image || !video) {\n      return res.status(400).send({ error: 'Incomplete data' });\n    }\n    return res.status(201).send({ data: [recordObject.createRecord(req.body)] });\n  },\n\n  viewAllRedflags(req, res) {\n    res.status(200).send({ data: [recordObject.findAllRecords('redflag')] });\n  },\n\n  viewAllInterventions(req, res) {\n    res.status(200).send({ data: [recordObject.findAllRecords('intervention')] });\n  },\n\n  viewOneRedflag(req, res) {\n    const { foundRecord } = recordObject.findOneRecord(req.params.id);\n    if (!foundRecord) {\n      res.status(404).send({ error: 'Record not found' });\n    } else {\n      res.status(200).send({ data: [foundRecord] });\n    }\n  },\n\n  viewOneIntervention(req, res) {\n    const { foundRecord } = recordObject.findOneRecord(req.params.id);\n    if (!foundRecord) {\n      res.status(404).send({ error: 'Record not found' });\n    } else {\n      res.status(200).send({ data: [foundRecord] });\n    }\n  },\n\n  editRecordComment(req, res) {\n    const { foundRecord } = recordObject.findOneRecord(req.params.id);\n    if ( foundRecord  ) {\n      console.log(req.body.comment);\n      recordObject.updateComment(req.params.id, req.body.comment)\n      return res.status(200).send({ data: [{ id: Number(req.params.id), message: 'Updated record\\'s comment' }] });\n    }\n    return res.status(403).send({ error: 'Record not found' });\n  },\n\n  editRecordLocation(req, res) {\n    const { foundRecord } = recordObject.findOneRecord(req.params.id);\n    if (foundRecord ) {\n      recordObject.updateLocation(req.params.id, req.body.location)\n      return res.status(200).send({ data: [{ id: Number(req.params.id), message: 'Updated record\\'s comment' }] });\n    }\n    return res.status(403).send({ error: 'Record not found' });\n  },\n\n  deleteIntervention(req, res) {\n    const { foundRecord } = recordObject.findOneRecord(req.params.id);\n    if (!foundRecord) {\n      res.status(404).send({ error: 'Record not found' });\n    } else {\n      recordObject.deleteRecord(req.params.id)\n      res.status(200).send({ data: [{ id: Number(req.params.id), message: 'intervention record has been deleted' }] })\n    }\n  }\n};\n\nexport default recordControllers;\n"]}